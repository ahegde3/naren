package com.samsung.android.emailcommon.variant;import com.samsung.android.emailcommon.utility.EmailLog;import android.app.Activity;import android.content.ActivityNotFoundException;import android.content.Context;import android.content.Intent;import android.dirEncryption.DirEncryptionManager;import android.dirEncryption.SDCardEncryptionPolicies;import android.os.Environment;import android.os.storage.StorageManager;import android.os.storage.StorageVolume;public class DEMWraper {    private static final String TAG = "DEMWraper";    static public int DECRYPT = DirEncryptionManager.DECRYPT;	static public int ENCRYPT = DirEncryptionManager.ENCRYPT;	static public int ENCRYPT_FULL_ON = DirEncryptionManager.ENCRYPT_FULL_ON;	static public int EXCL_MEDIA_OFF = DirEncryptionManager.EXCL_MEDIA_OFF;    DirEncryptionManager mDEM = null;    private static DEMWraper sInstance = null;    private Context mContext = null;//    private StorageManager mStorageManager = null;    DEMWraper(Context context) {        mDEM = new DirEncryptionManager(context);        mContext = context;    }    public static DEMWraper getInstance(Context context) {        if (sInstance == null) {            sInstance = new DEMWraper(context);        }        return sInstance;    }    public void startEncryption(Activity act, int resultCode) {        Intent intent = new Intent(DPMWraper.ACTION_START_ENCRYPTION);        try {            act.startActivityForResult(intent, resultCode);            } catch(ActivityNotFoundException anfe) {            anfe.printStackTrace();        }                   }    public boolean isDeviceEncrypted() {        DPMWraper dpmWraper = DPMWraper.getInstance(mContext);        return dpmWraper.getStorageEncryptionStatus() == DPMWraper.ENCRYPTION_STATUS_ACTIVE;    }    public int checkSDStatus() {        int status = CommonDefs.SD_ENCRYPTION_NO_REQUIRED;        SDCardEncryptionPolicies savedPolicy = mDEM.getSDCardEncryptionPrefs();        if(savedPolicy == null || savedPolicy.mEnc == DirEncryptionManager.DECRYPT)        {            // if(!isSDMounted())            status = CommonDefs.SD_ENCRYPTION_POLICY_REQUIRED;            // else            // status = CommonDefs.SD_ENCRYPTION_REQUIRED;        }        else if(savedPolicy.mEnc == DirEncryptionManager.ENCRYPT)        {            if (!easPolicyApplied(savedPolicy))                status = CommonDefs.SD_ENCRYPTION_POLICY_REQUIRED;            else                status = CommonDefs.SD_ENCRYPTION_NO_REQUIRED;        }        EmailLog.d(TAG, "checkSDStatus returns : " + status);        return status;    }        public boolean easPolicyApplied(SDCardEncryptionPolicies savedPolicy)    {        if(savedPolicy.mEnc == DirEncryptionManager.ENCRYPT                 && savedPolicy.mFullEnc == DirEncryptionManager.ENCRYPT_FULL_ON                && savedPolicy.mExcludeMedia == DirEncryptionManager.EXCL_MEDIA_OFF)            return true;        else            return false;    }    public boolean isEncryptionSupported() {        DPMWraper dpmWraper = DPMWraper.getInstance(mContext);        return dpmWraper.getStorageEncryptionStatus() != DPMWraper.ENCRYPTION_STATUS_UNSUPPORTED;    }    public void setStorageCardEncryptionPolicy(int arg1, int arg2, int arg3) {    	mDEM.setStorageCardEncryptionPolicy(arg1, arg2, arg3);    }    /*private boolean isSDMounted() {        String status = null;        if (mStorageManager == null) {            mStorageManager = (StorageManager) mContext.getSystemService(Context.STORAGE_SERVICE);        }        StorageVolume[] storageVolumes = mStorageManager.getVolumeList();        int length = storageVolumes.length;        StorageVolume extStorageVolume = null;        for (int i = 0, j = 0; i < length; i++) {            StorageVolume storageVolume = storageVolumes[i];            String subsystem = storageVolume.getSubSystem();            String state = mStorageManager.getVolumeState(storageVolume.getPath());            if (!((subsystem != null) && (subsystem.equals("usb")) && (Environment.MEDIA_REMOVED                    .equals(state)))) {                if (j == 0)                    j++;                else                    extStorageVolume = storageVolume;            }        }        if (extStorageVolume != null) {            status = mStorageManager.getVolumeState(extStorageVolume.getPath());        }        EmailLog.d(TAG, "isSDMounted returns " + status);        if (Environment.MEDIA_MOUNTED.equals(status))            return true;        else            return false;    }*/}